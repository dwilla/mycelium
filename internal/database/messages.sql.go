// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: messages.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getMessagesForChannel = `-- name: GetMessagesForChannel :many
SELECT id, author, channel, body, created_at, updated_at FROM messages
WHERE channel = $1
ORDER BY created_at ASC
`

func (q *Queries) GetMessagesForChannel(ctx context.Context, channel uuid.NullUUID) ([]Message, error) {
	rows, err := q.db.QueryContext(ctx, getMessagesForChannel, channel)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Message
	for rows.Next() {
		var i Message
		if err := rows.Scan(
			&i.ID,
			&i.Author,
			&i.Channel,
			&i.Body,
			&i.CreatedAt,
			&i.UpdatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
